@startuml
actor User
participant ":DeleteExpenseCommand" as DeleteExpenseCommand
participant ":ExpenseList" as ExpenseList
participant ":InvalidNumberFormatException" as InvalidNumberFormatException

User -> DeleteExpenseCommand: Create command(input)
activate DeleteExpenseCommand



DeleteExpenseCommand -> DeleteExpenseCommand : checkEmptyIndex(indexString)
activate DeleteExpenseCommand
opt indexString.isEmpty()
DeleteExpenseCommand -> InvalidNumberFormatException : throw InvalidNumberFormatException(ERROR_EMPTY_INDEX)
activate InvalidNumberFormatException
InvalidNumberFormatException --> DeleteExpenseCommand
deactivate InvalidNumberFormatException
end
DeleteExpenseCommand --> DeleteExpenseCommand
deactivate DeleteExpenseCommand


DeleteExpenseCommand -> DeleteExpenseCommand : parse indexString to int
activate DeleteExpenseCommand
DeleteExpenseCommand --> DeleteExpenseCommand
deactivate DeleteExpenseCommand

DeleteExpenseCommand -> DeleteExpenseCommand : checkValidIndex(expenseList, index)
activate DeleteExpenseCommand
opt index < 0 || index >= expenseList.getSize()
DeleteExpenseCommand -> InvalidNumberFormatException : throw InvalidNumberFormatException(ERROR_INVALID_EXPENSE_INDEX)
activate InvalidNumberFormatException
InvalidNumberFormatException --> DeleteExpenseCommand
deactivate InvalidNumberFormatException
end
DeleteExpenseCommand --> DeleteExpenseCommand
deactivate DeleteExpenseCommand

DeleteExpenseCommand -> ExpenseList: print description and amount for given index
activate ExpenseList
ExpenseList --> DeleteExpenseCommand
deactivate ExpenseList

DeleteExpenseCommand --> User
deactivate DeleteExpenseCommand
@enduml